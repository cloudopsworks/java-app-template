##
# (c) 2022 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Dependency Track Analysis
on:
  workflow_call:
    inputs:
      projectName:
        required: true
        type: string
      projectType:
        required: true
        type: string
      semver:
        required: false
        type: string
#      ref:
#        required: true
#        type: string
      dependencyTrackUrl:
        required: true
        type: string

    secrets:
      BOT_TOKEN:
        required: true
      dependencyTrackToken:
        required: true

jobs:
  dependency-track:
    runs-on: ubuntu-latest
    steps:
      # Proceed with checkout of source with all the references (depth=0)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
          #ref: ${{ inputs.ref }}
      # Get pipeline conf java version
      - name: Get pipeline node version
        id: java_version
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.build.java.version // "17"' ./.github/cloudopsworks-ci.yaml
      # Get pipeline conf node dist
      - name: Get pipeline java dist
        id: java_dist
        uses: mikefarah/yq@master
        with:
          cmd: yq e '.build.java.dist // "adopt"' ./.github/cloudopsworks-ci.yaml
      # Setup Java JDK for builds
      - name: Set JDK
        uses: actions/setup-java@v3
        with:
          java-version: "${{ steps.java_version.outputs.result }}"
          distribution: "${{ steps.java_dist.outputs.result }}"
      # Cache all maven packages
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # Run versioning to tag the source
      - name: Run Versioning setup
        run: make version

      #      # SBOM generation
      #      - name: SBOM Generation for Dtrack
      #        uses: AppThreat/cdxgen-action@v1
      #        with:
      #          output: "./target/bom.xml"
      #          projectVersion: ${{ inputs.ref }}
      #          serverUrl: https://${{ inputs.dependencyTrackUrl }}
      #          apiKey: ${{ secrets.dependencyTrackToken }}

      # SBOM generation
      - name: SBOM Generation for Dtrack
        run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom -DprojectType=${{ inputs.projectType }} -DoutputFormat=xml -DoutputName=dtrack-bom

      # SBOM generated reports upload
      - uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: target/dtrack-bom.xml
          retention-days: 1

      # SBOM upload
      - name: SBOM Dtrack Upload
        run: |
          curl -X "POST" "https://${{ inputs.dependencyTrackUrl }}/api/v1/bom" \
               -H 'Content-Type: multipart/form-data' \
               -H 'X-API-Key: ${{ secrets.dependencyTrackToken }}' \
               -F "autoCreate=true" \
               -F "projectName=${{ inputs.projectName }}" \
               -F "projectVersion=${{ inputs.semver }}" \
               -F "bom=@target/dtrack-bom.xml"
